basePath: /api/v1
definitions:
  controllers.InviteStatus:
    enum:
    - pending
    - accepted
    - expired
    - revoked
    type: string
    x-enum-varnames:
    - InviteStatusPending
    - InviteStatusAccepted
    - InviteStatusExpired
    - InviteStatusRevoked
  controllers.LoginRequest:
    description: Requisição de login do usuário
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        type: string
    required:
    - email
    - password
    type: object
  controllers.LoginResponse:
    description: Resposta de login com token e informações do usuário
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        $ref: '#/definitions/controllers.UserResponse'
    type: object
  controllers.MessageResponse:
    description: Resposta de mensagem simples
    properties:
      message:
        example: Operation completed successfully
        type: string
    type: object
  controllers.NotificationEvent:
    enum:
    - member_joined
    - member_left
    - member_role_changed
    - invitation_sent
    - invitation_accepted
    - invitation_expired
    - organization_update
    type: string
    x-enum-varnames:
    - NotificationEventMemberJoined
    - NotificationEventMemberLeft
    - NotificationEventMemberRoleChanged
    - NotificationEventInvitationSent
    - NotificationEventInvitationAccepted
    - NotificationEventInvitationExpired
    - NotificationEventOrganizationUpdate
  controllers.NotificationEventsResponse:
    description: Resposta dos eventos de notificação disponíveis
    properties:
      events:
        items:
          $ref: '#/definitions/controllers.NotificationEvent'
        type: array
    type: object
  controllers.NotificationListResponse:
    description: Resposta da lista de notificações com paginação
    properties:
      limit:
        example: 10
        type: integer
      notifications:
        items:
          $ref: '#/definitions/controllers.NotificationResponse'
        type: array
      page:
        example: 1
        type: integer
      total:
        example: 25
        type: integer
      total_pages:
        example: 3
        type: integer
    type: object
  controllers.NotificationPreferenceBulkItem:
    properties:
      enabled:
        example: true
        type: boolean
      event:
        allOf:
        - $ref: '#/definitions/controllers.NotificationEvent'
        example: member_joined
    required:
    - event
    type: object
  controllers.NotificationPreferenceBulkUpdateRequest:
    description: Requisição de atualização em lote de preferências de notificação
    properties:
      preferences:
        items:
          $ref: '#/definitions/controllers.NotificationPreferenceBulkItem'
        minItems: 1
        type: array
    required:
    - preferences
    type: object
  controllers.NotificationPreferenceListResponse:
    description: Resposta da lista de preferências de notificação
    properties:
      preferences:
        items:
          $ref: '#/definitions/controllers.NotificationPreferenceResponse'
        type: array
    type: object
  controllers.NotificationPreferenceResponse:
    description: Resposta da preferência de notificação
    properties:
      created_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      enabled:
        example: true
        type: boolean
      event:
        allOf:
        - $ref: '#/definitions/controllers.NotificationEvent'
        example: member_joined
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      updated_at:
        example: "2023-01-01T12:00:00Z"
        type: string
    type: object
  controllers.NotificationPreferenceUpdateRequest:
    description: Requisição de atualização de preferências de notificação
    properties:
      enabled:
        example: true
        type: boolean
    type: object
  controllers.NotificationResponse:
    description: Resposta da notificação
    properties:
      created_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      data:
        example: '{"action":"member_joined","member_id":"123"}'
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      message:
        example: João Silva foi adicionado à organização TechCorp
        type: string
      organization_id:
        example: 550e8400-e29b-41d4-a716-446655440002
        type: string
      read:
        example: false
        type: boolean
      read_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      title:
        example: Novo membro na organização
        type: string
      type:
        allOf:
        - $ref: '#/definitions/controllers.NotificationType'
        example: info
    type: object
  controllers.NotificationType:
    enum:
    - info
    - success
    - warning
    - error
    type: string
    x-enum-varnames:
    - NotificationTypeInfo
    - NotificationTypeSuccess
    - NotificationTypeWarning
    - NotificationTypeError
  controllers.OrganizationCreateRequest:
    description: Requisição de criação de organização
    properties:
      description:
        example: A great company
        maxLength: 500
        type: string
      name:
        example: My Company
        maxLength: 100
        minLength: 2
        type: string
    required:
    - name
    type: object
  controllers.OrganizationInviteListResponse:
    description: Resposta da lista de convites da organização com paginação
    properties:
      data:
        items:
          $ref: '#/definitions/controllers.OrganizationInviteResponse'
        type: array
      limit:
        example: 50
        type: integer
      page:
        example: 1
        type: integer
      total:
        example: 100
        type: integer
    type: object
  controllers.OrganizationInviteRequest:
    description: Requisição de convite da organização
    properties:
      email:
        example: user@example.com
        type: string
      role:
        allOf:
        - $ref: '#/definitions/controllers.OrganizationRole'
        enum:
        - admin
        - user
        example: user
    required:
    - email
    - role
    type: object
  controllers.OrganizationInviteResponse:
    description: Resposta do convite da organização
    properties:
      accepted_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      created_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      email:
        example: user@example.com
        type: string
      expires_at:
        example: "2023-12-31T23:59:59Z"
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      invited_by:
        example: 550e8400-e29b-41d4-a716-446655440002
        type: string
      inviter:
        $ref: '#/definitions/controllers.UserResponse'
      organization:
        $ref: '#/definitions/controllers.OrganizationResponse'
      organization_id:
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
      role:
        allOf:
        - $ref: '#/definitions/controllers.OrganizationRole'
        example: user
      status:
        allOf:
        - $ref: '#/definitions/controllers.InviteStatus'
        example: pending
      updated_at:
        example: "2023-01-01T12:00:00Z"
        type: string
    type: object
  controllers.OrganizationListResponse:
    description: Resposta da lista de organizações com paginação
    properties:
      data:
        items:
          $ref: '#/definitions/controllers.OrganizationResponse'
        type: array
      limit:
        example: 50
        type: integer
      page:
        example: 1
        type: integer
      total:
        example: 100
        type: integer
    type: object
  controllers.OrganizationMemberListResponse:
    description: Resposta da lista de membros da organização com paginação
    properties:
      data:
        items:
          $ref: '#/definitions/controllers.OrganizationMemberResponse'
        type: array
      limit:
        example: 50
        type: integer
      page:
        example: 1
        type: integer
      total:
        example: 100
        type: integer
    type: object
  controllers.OrganizationMemberResponse:
    description: Resposta do membro da organização
    properties:
      created_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      joined_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      organization:
        $ref: '#/definitions/controllers.OrganizationResponse'
      organization_id:
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
      role:
        allOf:
        - $ref: '#/definitions/controllers.OrganizationRole'
        example: user
      updated_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      user:
        $ref: '#/definitions/controllers.UserResponse'
      user_id:
        example: 550e8400-e29b-41d4-a716-446655440002
        type: string
    type: object
  controllers.OrganizationMemberUpdateRequest:
    description: Requisição de atualização de membro da organização
    properties:
      role:
        allOf:
        - $ref: '#/definitions/controllers.OrganizationRole'
        enum:
        - admin
        - user
        example: user
    required:
    - role
    type: object
  controllers.OrganizationResponse:
    description: Resposta da organização
    properties:
      created_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      created_by:
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
      creator:
        $ref: '#/definitions/controllers.UserResponse'
      description:
        example: A great company
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      invite_count:
        example: 2
        type: integer
      member_count:
        example: 5
        type: integer
      name:
        example: My Company
        type: string
      updated_at:
        example: "2023-01-01T12:00:00Z"
        type: string
    type: object
  controllers.OrganizationRole:
    enum:
    - admin
    - user
    type: string
    x-enum-varnames:
    - OrganizationRoleAdmin
    - OrganizationRoleUser
  controllers.OrganizationUpdateRequest:
    description: Requisição de atualização de organização
    properties:
      description:
        example: A great company
        maxLength: 500
        type: string
      name:
        example: My Company
        maxLength: 100
        minLength: 2
        type: string
    type: object
  controllers.PasswordResetConfirmRequest:
    description: Requisição de confirmação de redefinição de senha
    properties:
      new_password:
        example: NewSecurePass123!
        type: string
      token:
        example: reset-token-123
        type: string
    required:
    - new_password
    - token
    type: object
  controllers.PasswordResetRequest:
    description: Requisição de redefinição de senha
    properties:
      email:
        example: user@example.com
        type: string
    required:
    - email
    type: object
  controllers.ProfileResponse:
    description: Resposta do perfil
    properties:
      city:
        example: São Paulo
        type: string
      created_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      district:
        example: Centro
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
      phone:
        example: "11987654321"
        type: string
      street:
        example: 123 Main Street
        type: string
      updated_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      zip_code:
        example: "01234567"
        type: string
    type: object
  controllers.RegisterRequest:
    description: Requisição de registro do usuário
    properties:
      email:
        example: user@example.com
        type: string
      name:
        example: John Doe
        maxLength: 100
        minLength: 2
        type: string
      password:
        example: SecurePass123!
        type: string
    required:
    - email
    - name
    - password
    type: object
  controllers.TestNotificationRequest:
    description: Requisição de notificação de teste
    properties:
      message:
        example: This is a test notification to verify your settings
        maxLength: 500
        minLength: 1
        type: string
      organization_id:
        example: 550e8400-e29b-41d4-a716-446655440002
        type: string
      title:
        example: Test Notification
        maxLength: 200
        minLength: 1
        type: string
      type:
        allOf:
        - $ref: '#/definitions/controllers.NotificationType'
        enum:
        - info
        - success
        - warning
        - error
        example: info
    required:
    - message
    - organization_id
    - title
    - type
    type: object
  controllers.TestNotificationResponse:
    description: Resposta da notificação de teste
    properties:
      message:
        example: Test notification sent successfully
        type: string
      notification:
        $ref: '#/definitions/controllers.NotificationResponse'
    type: object
  controllers.UnreadCountResponse:
    description: Resposta da contagem de notificações não lidas
    properties:
      count:
        example: 5
        type: integer
    type: object
  controllers.UpdateLastSelectedOrganizationRequest:
    description: Requisição de atualização da última organização selecionada
    properties:
      organization_id:
        example: 550e8400-e29b-41d4-a716-446655440002
        type: string
    type: object
  controllers.UserResponse:
    description: Resposta do usuário
    properties:
      created_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      last_selected_organization_id:
        example: 550e8400-e29b-41d4-a716-446655440002
        type: string
      name:
        example: John Doe
        type: string
      profile:
        $ref: '#/definitions/controllers.ProfileResponse'
      updated_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      username:
        example: user@example.com
        type: string
    type: object
  errors.BadRequestProblem:
    description: Resposta de erro de requisição inválida
    properties:
      detail:
        example: Formato de requisição ou parâmetros inválidos
        type: string
      instance:
        example: /api/v1/notifications
        type: string
      status:
        example: 400
        type: integer
      title:
        example: Requisição Inválida
        type: string
      type:
        example: https://avantpro-backend.com/errors/bad-request
        type: string
    type: object
  errors.ConflictProblem:
    description: Resposta de erro de conflito
    properties:
      detail:
        example: Recurso já existe ou entra em conflito com o estado atual
        type: string
      instance:
        example: /api/v1/users
        type: string
      status:
        example: 409
        type: integer
      title:
        example: Conflito de Recurso
        type: string
      type:
        example: https://avantpro-backend.com/errors/conflict
        type: string
    type: object
  errors.ForbiddenProblem:
    description: Resposta de erro proibido
    properties:
      detail:
        example: Acesso negado para este recurso
        type: string
      instance:
        example: /api/v1/organizations
        type: string
      status:
        example: 403
        type: integer
      title:
        example: Proibido
        type: string
      type:
        example: https://avantpro-backend.com/errors/forbidden
        type: string
    type: object
  errors.GoneProblem:
    description: Resposta de erro de recurso indisponível
    properties:
      detail:
        example: 'Recurso não está mais disponível (ex: convite expirado)'
        type: string
      instance:
        example: /api/v1/invites/token/abc123
        type: string
      status:
        example: 410
        type: integer
      title:
        example: Recurso Indisponível
        type: string
      type:
        example: https://avantpro-backend.com/errors/gone
        type: string
    type: object
  errors.InternalServerProblem:
    description: Resposta de erro interno do servidor
    properties:
      detail:
        example: Ocorreu um erro inesperado. Tente novamente mais tarde.
        type: string
      instance:
        example: /api/v1/notifications
        type: string
      status:
        example: 500
        type: integer
      title:
        example: Erro Interno do Servidor
        type: string
      type:
        example: https://avantpro-backend.com/errors/internal
        type: string
    type: object
  errors.NotFoundProblem:
    description: Resposta de erro não encontrado
    properties:
      detail:
        example: O recurso solicitado não foi encontrado
        type: string
      instance:
        example: /api/v1/notifications/123
        type: string
      status:
        example: 404
        type: integer
      title:
        example: Recurso Não Encontrado
        type: string
      type:
        example: https://avantpro-backend.com/errors/not-found
        type: string
    type: object
  errors.UnauthorizedProblem:
    description: Resposta de erro não autorizado
    properties:
      detail:
        example: Autenticação necessária ou token inválido
        type: string
      instance:
        example: /api/v1/notifications
        type: string
      status:
        example: 401
        type: integer
      title:
        example: Não Autorizado
        type: string
      type:
        example: https://avantpro-backend.com/errors/unauthorized
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: rafabene@gmail.com
    name: Suporte da API
    url: http://www.swagger.io/support
  description: APIs do Avant Pro
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: AvantPro Backend API
  version: "1.0"
paths:
  /auth/last-selected-organization:
    put:
      consumes:
      - application/json
      description: Atualizar preferência da última organização selecionada do usuário
      parameters:
      - description: Dados de preferência da organização
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateLastSelectedOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Última organização selecionada atualizada com sucesso
          schema:
            $ref: '#/definitions/controllers.MessageResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - Bearer: []
      summary: Atualizar última organização selecionada
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Autentica usuário com email e senha
      parameters:
      - description: Credenciais de login
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Resposta de sucesso com token e informações do usuário
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Fazer login do usuário
      tags:
      - auth
  /auth/password-reset:
    post:
      consumes:
      - application/json
      description: Enviar email de redefinição de senha para o usuário
      parameters:
      - description: Email para redefinição de senha
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/controllers.PasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Email de redefinição enviado com sucesso
          schema:
            $ref: '#/definitions/controllers.MessageResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "404":
          description: Não encontrado
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Solicitar redefinição de senha
      tags:
      - auth
  /auth/password-reset/confirm:
    post:
      consumes:
      - application/json
      description: Redefinir senha do usuário usando token de redefinição
      parameters:
      - description: Dados de redefinição de senha
        in: body
        name: reset
        required: true
        schema:
          $ref: '#/definitions/controllers.PasswordResetConfirmRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Senha redefinida com sucesso
          schema:
            $ref: '#/definitions/controllers.MessageResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "404":
          description: Não encontrado
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Redefinir senha
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Criar uma nova conta de usuário
      parameters:
      - description: Dados de registro
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Usuário criado com sucesso
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "409":
          description: Conflito
          schema:
            $ref: '#/definitions/errors.ConflictProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Registrar novo usuário
      tags:
      - auth
  /invites:
    get:
      consumes:
      - application/json
      description: Obter todos os convites pendentes para a organização (somente administradores)
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      - default: 1
        description: Número da página
        in: query
        name: page
        type: integer
      - default: 50
        description: Itens por página
        in: query
        name: limit
        type: integer
      - default: '"created_at"'
        description: Ordenar por campo
        in: query
        name: sortBy
        type: string
      - default: '"desc"'
        description: Ordem de classificação (asc/desc)
        in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lista dos convites da organização
          schema:
            $ref: '#/definitions/controllers.OrganizationInviteListResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "403":
          description: Permissões insuficientes
          schema:
            $ref: '#/definitions/errors.ForbiddenProblem'
        "404":
          description: Organização não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Obter convites da organização
      tags:
      - organizations
    post:
      consumes:
      - application/json
      description: Enviar um convite para um usuário ingressar na organização (somente
        administradores)
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      - description: Dados do convite
        in: body
        name: invitation
        required: true
        schema:
          $ref: '#/definitions/controllers.OrganizationInviteRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Convite enviado com sucesso
          schema:
            $ref: '#/definitions/controllers.OrganizationInviteResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "403":
          description: Permissões insuficientes
          schema:
            $ref: '#/definitions/errors.ForbiddenProblem'
        "404":
          description: Organização não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Convidar usuário para organização
      tags:
      - organizations
  /invites/{inviteId}:
    delete:
      consumes:
      - application/json
      description: Revogar um convite para ingressar na organização (somente administradores)
      parameters:
      - description: ID do Convite
        in: path
        name: inviteId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Convite revogado com sucesso
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "403":
          description: Permissões insuficientes
          schema:
            $ref: '#/definitions/errors.ForbiddenProblem'
        "404":
          description: Convite não encontrado
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Revogar convite da organização
      tags:
      - organizations
  /invites/{inviteId}/resend:
    post:
      consumes:
      - application/json
      description: Reenviar um convite com um novo token e expiração estendida (somente
        administradores)
      parameters:
      - description: ID do Convite
        in: path
        name: inviteId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Convite reenviado com sucesso
          schema:
            $ref: '#/definitions/controllers.OrganizationInviteResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "403":
          description: Permissões insuficientes
          schema:
            $ref: '#/definitions/errors.ForbiddenProblem'
        "404":
          description: Convite não encontrado
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Reenviar convite da organização
      tags:
      - organizations
  /invites/token/{token}/accept:
    post:
      consumes:
      - application/json
      description: Aceitar um convite para ingressar em uma organização usando o token
        de convite
      parameters:
      - description: Token de convite
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Convite aceito com sucesso
          schema:
            $ref: '#/definitions/controllers.OrganizationMemberResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "404":
          description: Convite não encontrado
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "410":
          description: Convite expirado ou não válido
          schema:
            $ref: '#/definitions/errors.GoneProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Aceitar convite da organização
      tags:
      - organizations
  /invites/token/{token}/validate:
    get:
      description: Validar um token de convite e verificar se o usuário convidado
        existe
      parameters:
      - description: Token de Convite
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Detalhes do convite válido
          schema:
            $ref: '#/definitions/controllers.OrganizationInviteResponse'
        "404":
          description: Convite não encontrado
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "410":
          description: Convite expirado ou não válido
          schema:
            $ref: '#/definitions/errors.GoneProblem'
      summary: Validar convite da organização
      tags:
      - organizations
  /members:
    get:
      consumes:
      - application/json
      description: Obter todos os membros de uma organização
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      - default: 1
        description: Número da página
        in: query
        name: page
        type: integer
      - default: 50
        description: Itens por página
        in: query
        name: limit
        type: integer
      - default: '"joined_at"'
        description: Ordenar por campo
        in: query
        name: sortBy
        type: string
      - default: '"desc"'
        description: Ordem de classificação (asc/desc)
        in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lista dos membros da organização
          schema:
            $ref: '#/definitions/controllers.OrganizationMemberListResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "403":
          description: Permissões insuficientes
          schema:
            $ref: '#/definitions/errors.ForbiddenProblem'
        "404":
          description: Organização não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Obter membros da organização
      tags:
      - organizations
  /members/{userId}:
    delete:
      consumes:
      - application/json
      description: Remover um membro da organização
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      - description: ID do Usuário
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Membro removido com sucesso
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "403":
          description: Permissões insuficientes
          schema:
            $ref: '#/definitions/errors.ForbiddenProblem'
        "404":
          description: Membro ou organização não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Remover membro
      tags:
      - organizations
    put:
      consumes:
      - application/json
      description: Atualizar a função de um membro na organização (somente administradores)
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      - description: ID do Usuário
        in: path
        name: userId
        required: true
        type: string
      - description: Dados de atualização de função
        in: body
        name: member
        required: true
        schema:
          $ref: '#/definitions/controllers.OrganizationMemberUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Função do membro atualizada com sucesso
          schema:
            $ref: '#/definitions/controllers.OrganizationMemberResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "403":
          description: Permissões insuficientes
          schema:
            $ref: '#/definitions/errors.ForbiddenProblem'
        "404":
          description: Membro ou organização não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Atualizar função do membro
      tags:
      - organizations
  /memberships:
    get:
      consumes:
      - application/json
      description: Obter todas as organizações das quais o usuário autenticado é membro
      parameters:
      - default: 1
        description: Número da página
        in: query
        name: page
        type: integer
      - default: 50
        description: Itens por página
        in: query
        name: limit
        type: integer
      - default: '"joined_at"'
        description: Ordenar por campo
        in: query
        name: sortBy
        type: string
      - default: '"desc"'
        description: Ordem de classificação (asc/desc)
        in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lista das filiações do usuário
          schema:
            $ref: '#/definitions/controllers.OrganizationMemberListResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Obter filiações do usuário
      tags:
      - organizations
  /notification-preferences:
    get:
      consumes:
      - application/json
      description: Recuperar preferências de notificação para uma organização. Cria
        padrões se nenhum existir.
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Resposta de sucesso com preferências
          schema:
            $ref: '#/definitions/controllers.NotificationPreferenceListResponse'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "404":
          description: Organização não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - BearerAuth: []
      summary: Obter preferências de notificação da organização
      tags:
      - notification-preferences
    put:
      consumes:
      - application/json
      description: Atualização em lote das preferências de notificação para uma organização
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      - description: Solicitação de atualização em lote
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.NotificationPreferenceBulkUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Resposta de sucesso com preferências atualizadas
          schema:
            $ref: '#/definitions/controllers.NotificationPreferenceListResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "404":
          description: Organização não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - BearerAuth: []
      summary: Atualizar preferências de notificação da organização
      tags:
      - notification-preferences
  /notification-preferences/{event}:
    put:
      consumes:
      - application/json
      description: Atualizar uma preferência de notificação específica para uma organização
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      - description: Tipo de evento de notificação
        in: path
        name: event
        required: true
        type: string
      - description: Solicitação de atualização
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.NotificationPreferenceUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Resposta de sucesso com preferência atualizada
          schema:
            $ref: '#/definitions/controllers.NotificationPreferenceResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "404":
          description: Organização não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - BearerAuth: []
      summary: Atualizar preferência de notificação única
      tags:
      - notification-preferences
  /notification-preferences/events:
    get:
      consumes:
      - application/json
      description: Recuperar todos os tipos de evento de notificação disponíveis com
        descrições
      produces:
      - application/json
      responses:
        "200":
          description: Resposta de sucesso com eventos disponíveis
          schema:
            $ref: '#/definitions/controllers.NotificationEventsResponse'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
      security:
      - BearerAuth: []
      summary: Obter eventos de notificação disponíveis
      tags:
      - notification-preferences
  /notification-preferences/reset:
    post:
      consumes:
      - application/json
      description: Redefinir todas as preferências de notificação para uma organização
        para valores padrão
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Resposta de sucesso com preferências padrão
          schema:
            $ref: '#/definitions/controllers.NotificationPreferenceListResponse'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "404":
          description: Organização não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - BearerAuth: []
      summary: Redefinir preferências para padrões
      tags:
      - notification-preferences
  /notification-preferences/test:
    post:
      consumes:
      - application/json
      description: Gerar uma notificação de teste para o usuário autenticado verificar
        as configurações
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      - description: Solicitação de notificação de teste
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.TestNotificationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Resposta de sucesso com notificação de teste
          schema:
            $ref: '#/definitions/controllers.TestNotificationResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - BearerAuth: []
      summary: Gerar notificação de teste
      tags:
      - notification-preferences
  /notifications:
    delete:
      consumes:
      - application/json
      description: Excluir todas as notificações para o usuário autenticado
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Mensagem de sucesso
          schema:
            $ref: '#/definitions/controllers.MessageResponse'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - BearerAuth: []
      summary: Excluir todas as notificações
      tags:
      - notifications
    get:
      consumes:
      - application/json
      description: Recuperar lista paginada de notificações para o usuário autenticado
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      - default: 1
        description: 'Número da página (padrão: 1)'
        in: query
        name: page
        type: integer
      - default: 10
        description: 'Número de itens por página (padrão: 10, máx: 100)'
        in: query
        name: limit
        type: integer
      - default: created_at
        description: Ordenar por campo (title, type, read, created_at, updated_at)
        in: query
        name: sortBy
        type: string
      - default: desc
        description: Ordem de classificação (asc, desc)
        in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Resposta de sucesso com notificações e paginação
          schema:
            $ref: '#/definitions/controllers.NotificationListResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - BearerAuth: []
      summary: Obter notificações do usuário
      tags:
      - notifications
  /notifications/{notifId}:
    delete:
      consumes:
      - application/json
      description: Excluir uma notificação específica para o usuário autenticado
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      - description: ID da Notificação
        in: path
        name: notifId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Mensagem de sucesso
          schema:
            $ref: '#/definitions/controllers.MessageResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "404":
          description: Notificação não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - BearerAuth: []
      summary: Excluir notificação
      tags:
      - notifications
  /notifications/{notifId}/read:
    put:
      consumes:
      - application/json
      description: Marcar uma notificação específica como lida para o usuário autenticado
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      - description: ID da Notificação
        in: path
        name: notifId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Mensagem de sucesso
          schema:
            $ref: '#/definitions/controllers.MessageResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "404":
          description: Notificação não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - BearerAuth: []
      summary: Marcar notificação como lida
      tags:
      - notifications
  /notifications/mark-all-read:
    put:
      consumes:
      - application/json
      description: Marcar todas as notificações como lidas para o usuário autenticado
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Mensagem de sucesso
          schema:
            $ref: '#/definitions/controllers.MessageResponse'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - BearerAuth: []
      summary: Marcar todas as notificações como lidas
      tags:
      - notifications
  /notifications/unread:
    get:
      consumes:
      - application/json
      description: Recuperar todas as notificações não lidas para o usuário autenticado
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Resposta de sucesso com notificações não lidas
          schema:
            items:
              $ref: '#/definitions/controllers.NotificationResponse'
            type: array
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - BearerAuth: []
      summary: Obter notificações não lidas
      tags:
      - notifications
  /notifications/unread-count:
    get:
      consumes:
      - application/json
      description: Recuperar a contagem de notificações não lidas para o usuário autenticado
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Resposta de sucesso com contagem não lida
          schema:
            $ref: '#/definitions/controllers.UnreadCountResponse'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      security:
      - BearerAuth: []
      summary: Obter contagem de notificações não lidas
      tags:
      - notifications
  /organizations:
    delete:
      consumes:
      - application/json
      description: Excluir uma organização (somente criador)
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Organização excluída com sucesso
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "403":
          description: Permissões insuficientes
          schema:
            $ref: '#/definitions/errors.ForbiddenProblem'
        "404":
          description: Organização não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Excluir organização
      tags:
      - organizations
    get:
      consumes:
      - application/json
      description: Obter uma organização específica por seu ID
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Informações da organização
          schema:
            $ref: '#/definitions/controllers.OrganizationResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "404":
          description: Organização não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Obter organização por ID
      tags:
      - organizations
    post:
      consumes:
      - application/json
      description: Criar uma nova organização com o usuário autenticado como administrador
      parameters:
      - description: Dados da organização
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/controllers.OrganizationCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Organização criada com sucesso
          schema:
            $ref: '#/definitions/controllers.OrganizationResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Criar uma nova organização
      tags:
      - organizations
    put:
      consumes:
      - application/json
      description: Atualizar uma organização (somente administradores)
      parameters:
      - description: ID da Organização
        in: header
        name: Organization-ID
        required: true
        type: string
      - description: Dados de atualização
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/controllers.OrganizationUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Organização atualizada com sucesso
          schema:
            $ref: '#/definitions/controllers.OrganizationResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "403":
          description: Permissões insuficientes
          schema:
            $ref: '#/definitions/errors.ForbiddenProblem'
        "404":
          description: Organização não encontrada
          schema:
            $ref: '#/definitions/errors.NotFoundProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Atualizar organização
      tags:
      - organizations
  /organizations/my:
    get:
      consumes:
      - application/json
      description: Obter todas as organizações criadas pelo usuário autenticado
      parameters:
      - default: 1
        description: Número da página
        in: query
        name: page
        type: integer
      - default: 50
        description: Itens por página
        in: query
        name: limit
        type: integer
      - default: '"created_at"'
        description: Ordenar por campo
        in: query
        name: sortBy
        type: string
      - default: '"desc"'
        description: Ordem de classificação (asc/desc)
        in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lista das organizações do usuário
          schema:
            $ref: '#/definitions/controllers.OrganizationListResponse'
        "400":
          description: Requisição inválida
          schema:
            $ref: '#/definitions/errors.BadRequestProblem'
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/errors.UnauthorizedProblem'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/errors.InternalServerProblem'
      summary: Obter organizações do usuário
      tags:
      - organizations
securityDefinitions:
  BearerAuth:
    description: Digite "Bearer" seguido de um espaço e o token JWT.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
